@import '../../../constants';

.Block-media {
  overflow: hidden;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  max-height: 100vh;

  &.is-fixed {
    clip: rect(0, auto, auto, 0);
    -webkit-clip-path: inset(0 0 0 0);
    max-height: none;

    & > * {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100vh; // https://github.com/bokand/URLBarSizing

      // Safari (7.1+)
      _::-webkit-full-page-media,
      _:future,
      :root & {
        -webkit-transform: translateZ(0);
      }
    }
  }

  .has-inset-media & > * {
    @media #{$mq-lg} {
      position: fixed;
      transform: translate(0, -50%);
      top: 50vh;
      width: 33rem;
      max-width: 42.5%;
      height: auto;

      // Safari (7.1+)
      _::-webkit-full-page-media,
      _:future,
      :root & {
        -webkit-transform: translate(0, -50%);
      }
    }

    @media #{$mq-xl} {
      width: 44rem;
    }
  }

  .has-inset-media.has-left & > * {
    @media #{$mq-lg} {
      right: calc(30% - 16rem);
      left: auto;
    }

    @media #{$mq-xl} {
      right: calc(30% - 25.75rem);
    }
  }

  .has-inset-media.has-right & > * {
    @media #{$mq-lg} {
      right: auto;
      left: calc(30% - 16rem);
    }

    @media #{$mq-xl} {
      left: calc(30% - 25.75rem);
    }
  }

  .has-inset-media &:not(.is-fixed) {
    @media #{$mq-not-lg} {
      clip: rect(0, auto, auto, 0);
      -webkit-clip-path: inset(0 0 0 0);
    }
  }

  .has-inset-media &:not(.is-fixed) > * {
    position: absolute;

    @media #{$mq-not-lg} {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100vh;
    }
  }

  &.is-beyond {
    position: absolute;
    top: auto;
    bottom: 0;
  }

  > * {
    height: 100%;
  }

  > *::after {
    .is-not-piecemeal & {
      content: '';
      position: absolute;
      bottom: 0;
      left: 0;
      width: 100%;
      height: 100%;
    }

    .is-not-piecemeal.has-dark & {
      background-color: $color-black-transparent-30;
      background-image: $gradient-black-vertical-50-0-100-60;
    }

    .is-not-piecemeal.has-light & {
      background-color: $color-white-transparent-30;
      background-image: $gradient-white-vertical-50-0-100-60;
    }

    @media #{$mq-lg} {
      .has-left.is-not-piecemeal &,
      .has-right.is-not-piecemeal & {
        background-color: transparent;
      }

      .has-left.has-dark.is-not-piecemeal &,
      .has-right.has-dark.is-not-piecemeal & {
        background-image: #{$gradient-black-vertical-50-0-100-60}, #{$gradient-black-horizontal-40-45-65-0};
      }

      .has-left.has-light.is-not-piecemeal &,
      .has-right.has-light.is-not-piecemeal & {
        background-image: #{$gradient-white-vertical-50-0-100-60}, #{$gradient-white-horizontal-40-45-65-0};
      }

      .has-right.is-not-piecemeal & {
        transform: scaleX(-1);
      }
    }
  }

  .is-not-piecemeal & {
    img,
    video {
      z-index: -1;
    }
  }

  .background-transition {
    /* fade between colours  */
    &.colour {
      transition: all 0.3s ease;

      &.transition-in {
        animation: blackIn 1s linear forwards 1;
      }

      &.transition-out {
        animation: blackOut 1s linear forwards 1;
      }

      @keyframes blackIn {
        0%,
        50% {
          opacity: 0;
        }
        100% {
          opacity: 1;
        }
      }

      @keyframes blackOut {
        0% {
          opacity: 1;
        }
        50%,
        100% {
          opacity: 0;
        }
      }
    }

    /* fading between the two cards  */

    &.crossfade {
      &.transition-in {
        opacity: 0;
        z-index: 1;
        animation: fadeIn 1s ease 0s 1 normal forwards;
      }

      &.transition-out {
        opacity: 1;
        z-index: 0;
      }

      @keyframes fadeIn {
        0% {
          opacity: 0;
        }
        100% {
          opacity: 1;
        }
      }
    }

    &.bouncefade {
      &.transition-in {
        z-index: 1;
        animation: bounceFadeIn 1s ease 0s 1 normal forwards;
      }

      &.transition-out {
        z-index: 0;
        animation: bounceFadeOut 1s ease 0s 1 normal forwards;
      }

      @keyframes bounceFadeIn {
        0% {
          opacity: 0;
          transform: translate(0, 20px);
        }
        100% {
          opacity: 1;
          transform: translate(0, 0);
        }
      }

      @keyframes bounceFadeOut {
        0% {
          opacity: 1;
          transform: translate(0, 0);
        }
        100% {
          opacity: 1;
          transform: translate(0, 20px);
        }
      }
    }

    &.zoomfade {
      &.transition-in {
        z-index: 0;
        opacity: 1;
      }

      &.transition-out {
        z-index: 1;
        animation: zoomFadeOut 1s ease 0s 1 normal forwards;
      }

      @keyframes zoomFadeOut {
        0% {
          opacity: 1;
          transform: scale(1);
        }
        100% {
          opacity: 0;
          transform: scale(1.15);
        }
      }
    }

    /* Sliding around */

    &.slideup {
      transition: all 1s ease;

      &.transition-in {
        animation: slideupIn 0.5s linear 0s 1 forwards;
      }

      &.transition-out {
        animation: slideupOut 0.5s linear 0s 1 forwards;
      }

      @keyframes slideupIn {
        0% {
          transform: translate(0, 100%);
        }
        100% {
          transform: translate(0, 0);
        }
      }

      @keyframes slideupOut {
        0% {
          transform: translate(0, 0);
        }
        100% {
          transform: translate(0, -100%);
        }
      }
    }

    &.slidedown {
      transition: all 1s ease;

      &.transition-in {
        animation: slidedownIn 0.5s linear 0s 1 forwards;
      }

      &.transition-out {
        animation: slidedownOut 0.5s linear 0s 1 forwards;
      }

      @keyframes slidedownIn {
        0% {
          transform: translate(0, -100%);
        }
        100% {
          transform: translate(0, 0);
        }
      }

      @keyframes slidedownOut {
        0% {
          transform: translate(0, 0);
        }
        100% {
          transform: translate(0, 100%);
        }
      }
    }

    &.slideright {
      transition: all 1s ease;

      &.transition-in {
        animation: sliderightIn 0.5s linear 0s 1 forwards;
      }

      &.transition-out {
        animation: sliderightOut 0.5s linear 0s 1 forwards;
      }

      @keyframes sliderightIn {
        0% {
          transform: translate(100%, 0);
        }
        100% {
          transform: translate(0, 0);
        }
      }

      @keyframes sliderightOut {
        0% {
          transform: translate(0, 0);
        }
        100% {
          transform: translate(-100%, 0);
        }
      }
    }

    &.slideleft {
      transition: all 1s ease;

      &.transition-in {
        animation: slidelefttIn 0.5s linear 0s 1 forwards;
      }

      &.transition-out {
        animation: slidelefttOut 0.5s linear 0s 1 forwards;
      }

      @keyframes slidelefttIn {
        0% {
          transform: translate(-100%, 0);
        }
        100% {
          transform: translate(0, 0);
        }
      }

      @keyframes slidelefttOut {
        0% {
          transform: translate(0, 0);
        }
        100% {
          transform: translate(100%, 0);
        }
      }
    }

    /* Swap in cards, like shuffling */

    &.shuffle {
      // transition: all 1s ease;

      &.transition-in {
        z-index: 0;
        animation: shuffleIn 1s linear 0s 1 forwards;
      }

      &.transition-out {
        z-index: 1;
        animation: shuffleOut 1s linear 0s 1 forwards;
      }

      @keyframes shuffleIn {
        0% {
          opacity: 0;
          transform: scale(0.25) translate(0, 0);
        }
        50% {
          opacity: 0.5;
          transform: scale(0.5) translate(-100%, 0) rotate(-10deg);
        }
        100% {
          opacity: 1;
          transform: scale(1) translate(0, 0);
        }
      }

      @keyframes shuffleOut {
        0% {
          opacity: 1;
          transform: scale(1) translate(0, 0);
        }
        35% {
          opacity: 0.5;
          transform: scale(0.5) translate(100%, 0) rotate(10deg);
        }
        100% {
          opacity: 0;
          transform: scale(0.25) translate(0, 0);
        }
      }
    }
  }
}
