@import '../../../constants';

.Block {
  display: flex;
  flex-direction: column;
  justify-content: center;
  overflow: hidden;
  position: relative;
  margin-top: 0;
  min-height: 100vh;
  background-color: $color-black;
  line-height: 1.5;

  @media #{$mq-landscape} and #{$mq-not-lg}, #{$mq-lg} {
    min-height: 56.25vw;
  }
}

.Block-media {
  overflow: hidden;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  max-height: 100vh;

  &.is-fixed {
    clip: rect(0, auto, auto, 0);
    -webkit-clip-path: inset(0 0 0 0);
    max-height: none;

    & > * {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100vh; // https://github.com/bokand/URLBarSizing

      // Safari (7.1+)
      _::-webkit-full-page-media,
      _:future,
      :root & {
        -webkit-transform: translateZ(0);
      }
    }
  }

  .has-inset-media & > * {
    @media #{$mq-lg} {
      position: fixed;
      transform: translate(0, -50%);
      top: 50vh;
      width: 33rem;
      max-width: 42.5%;
      height: auto;

      // Safari (7.1+)
      _::-webkit-full-page-media,
      _:future,
      :root & {
        -webkit-transform: translate(0, -50%);
      }
    }

    @media (min-width: 112.5rem) {
      width: 44rem;
    }
  }

  .has-inset-media.is-left & > * {
    @media #{$mq-lg} {
      right: calc(30% - 17.5rem);
      left: auto;
    }

    @media (min-width: 112.5rem) {
      right: calc(30% - 25.75rem);
    }
  }

  .has-inset-media.is-right & > * {
    @media #{$mq-lg} {
      right: auto;
      left: calc(30% - 17.5rem);
    }

    @media (min-width: 112.5rem) {
      left: calc(30% - 25.75rem);
    }
  }

  .has-inset-media &:not(.is-fixed) {
    @media #{$mq-not-lg} {
      clip: rect(0, auto, auto, 0);
      -webkit-clip-path: inset(0 0 0 0);
    }
  }

  .has-inset-media &:not(.is-fixed) > * {
    position: absolute;

    @media #{$mq-not-lg} {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100vh;
    }
  }

  &.is-beyond {
    position: absolute;
    top: auto;
    bottom: 0;
  }

  &::after,
  .Block:not(.is-piecemeal) & > *::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  .Block:not(.is-piecemeal) &.is-fixed > *::after {
    will-change: opacity; // create stacking context
  }

  .Block:not(.is-piecemeal) &::after {
    background-color: $color-black-transparent-30;
  }

  .Block:not(.is-piecemeal) & > *::after {
    background-image: $gradient-black-vertical-50-0-100-60;
  }

  @media #{$mq-lg} {
    .is-left &::after,
    .is-right &::after {
      background-color: transparent;
    }

    .is-left:not(.is-piecemeal) &::after,
    .is-right:not(.is-piecemeal) &::after {
      background-image: $gradient-black-horizontal-40-45-65-0;
    }

    .is-right:not(.is-piecemeal) &::after {
      transform: scaleX(-1);
    }
  }

  > * {
    height: 100%;
  }

  video {
    z-index: -1;
  }

  .background-transition {
    /* fade between colours  */
    &.colour {
      transition: all 0.3s ease;

      &.transition-in {
        animation: blackIn 1s linear forwards 1;
      }

      &.transition-out {
        animation: blackOut 1s linear forwards 1;
      }

      @keyframes blackIn {
        0% {
          opacity: 0;
          // filter: saturate(0);
        }
        50% {
          opacity: 0;
          // filter: saturate(0);
        }
        100% {
          opacity: 1;
          // filter: saturate(1);
        }
      }

      @keyframes blackOut {
        0% {
          opacity: 1;
          // filter: saturate(1);
        }
        50% {
          opacity: 0;
          // filter: saturate(0);
        }
        100% {
          opacity: 0;
          // filter: saturate(0);
        }
      }
    }

    /* fading between the two cards  */

    &.crossfade {
      &.transition-in {
        opacity: 0;
        z-index: 10;
        animation: fadeIn 1s ease 0s 1 normal forwards;
      }

      &.transition-out {
        opacity: 1;
        z-index: 9;
      }

      @keyframes fadeIn {
        0% {
          opacity: 0;
        }
        100% {
          opacity: 1;
        }
      }
    }

    &.bouncefade {
      &.transition-in {
        z-index: 10;
        animation: bounceFadeIn 1s ease 0s 1 normal forwards;
      }

      &.transition-out {
        z-index: 9;
        animation: bounceFadeOut 1s ease 0s 1 normal forwards;
      }

      @keyframes bounceFadeIn {
        0% {
          opacity: 0;
          transform: translate(0, 20px);
        }
        100% {
          opacity: 1;
          transform: translate(0, 0);
        }
      }

      @keyframes bounceFadeOut {
        0% {
          opacity: 1;
          transform: translate(0, 0);
        }
        100% {
          opacity: 1;
          transform: translate(0, 20px);
        }
      }
    }

    &.zoomfade {
      &.transition-in {
        z-index: 9;
        opacity: 1;
      }

      &.transition-out {
        z-index: 10;
        animation: zoomFadeOut 1s ease 0s 1 normal forwards;
      }

      @keyframes zoomFadeOut {
        0% {
          opacity: 1;
          transform: scale(1);
        }
        100% {
          opacity: 0;
          transform: scale(1.15);
        }
      }
    }

    /* Sliding around */

    &.slideup {
      transition: all 1s ease;

      &.transition-in {
        animation: slideupIn 0.5s linear 0s 1 forwards;
      }

      &.transition-out {
        animation: slideupOut 0.5s linear 0s 1 forwards;
      }

      @keyframes slideupIn {
        0% {
          transform: translate(0, 100%);
        }
        100% {
          transform: translate(0, 0);
        }
      }

      @keyframes slideupOut {
        0% {
          transform: translate(0, 0);
        }
        100% {
          transform: translate(0, -100%);
        }
      }
    }

    &.slidedown {
      transition: all 1s ease;

      &.transition-in {
        animation: slidedownIn 0.5s linear 0s 1 forwards;
      }

      &.transition-out {
        animation: slidedownOut 0.5s linear 0s 1 forwards;
      }

      @keyframes slidedownIn {
        0% {
          transform: translate(0, -100%);
        }
        100% {
          transform: translate(0, 0);
        }
      }

      @keyframes slidedownOut {
        0% {
          transform: translate(0, 0);
        }
        100% {
          transform: translate(0, 100%);
        }
      }
    }

    &.slideright {
      transition: all 1s ease;

      &.transition-in {
        animation: sliderightIn 0.5s linear 0s 1 forwards;
      }

      &.transition-out {
        animation: sliderightOut 0.5s linear 0s 1 forwards;
      }

      @keyframes sliderightIn {
        0% {
          transform: translate(100%, 0);
        }
        100% {
          transform: translate(0, 0);
        }
      }

      @keyframes sliderightOut {
        0% {
          transform: translate(0, 0);
        }
        100% {
          transform: translate(-100%, 0);
        }
      }
    }

    &.slideleft {
      transition: all 1s ease;

      &.transition-in {
        animation: slidelefttIn 0.5s linear 0s 1 forwards;
      }

      &.transition-out {
        animation: slidelefttOut 0.5s linear 0s 1 forwards;
      }

      @keyframes slidelefttIn {
        0% {
          transform: translate(-100%, 0);
        }
        100% {
          transform: translate(0, 0);
        }
      }

      @keyframes slidelefttOut {
        0% {
          transform: translate(0, 0);
        }
        100% {
          transform: translate(100%, 0);
        }
      }
    }

    /* Swap in cards, like shuffling */

    &.shuffle {
      // transition: all 1s ease;

      &.transition-in {
        z-index: 9;
        animation: shuffleIn 1s linear 0s 1 forwards;
      }

      &.transition-out {
        z-index: 10;
        animation: shuffleOut 1s linear 0s 1 forwards;
      }

      @keyframes shuffleIn {
        0% {
          opacity: 0;
          transform: scale(0.25) translate(0, 0);
        }
        50% {
          opacity: 0.5;
          transform: scale(0.5) translate(-100%, 0) rotate(-10deg);
        }
        100% {
          opacity: 1;
          transform: scale(1) translate(0, 0);
        }
      }

      @keyframes shuffleOut {
        0% {
          opacity: 1;
          transform: scale(1) translate(0, 0);
        }
        35% {
          opacity: 0.5;
          transform: scale(0.5) translate(100%, 0) rotate(10deg);
        }
        100% {
          opacity: 0;
          transform: scale(0.25) translate(0, 0);
        }
      }
    }
  }
}

.Block-content {
  position: relative;
  z-index: 1;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 50%;
    z-index: -1;
    transform: translateX(-50%);
    width: calc(#{cells(10)} + 0.75rem);
    height: 100%;

    @media #{$mq-md} {
      width: calc(#{cells(10)} + 1.75rem);
    }

    @media #{$mq-lg} {
      width: calc(#{cells(8)} + 2rem);
    }
  }

  &.u-richtext::before {
    background-color: $color-white-transparent-90;
  }

  &.u-richtext-invert::before {
    background-color: $color-black-transparent-30;
  }

  & > * {
    @media #{$mq-sm} {
      width: cells(10);
    }
  }

  &:last-child > :last-child {
    margin-bottom: 0;
  }

  .Block:not(.is-piecemeal) > &:last-child {
    padding-top: 5rem;
    padding-bottom: 5rem;

    .Header.is-floating + & {
      margin-top: calc(140vh - #{$abc-nav-height});
      margin-bottom: calc(40vh);
      padding-top: 1.5rem;
      padding-bottom: 1.5rem;

      @media #{$mq-pl-sm} {
        margin-top: calc(140vh - #{$abc-nav-height--mq-pl-sm});
      }

      @media #{$mq-lg} {
        padding-top: 2.25rem;
        padding-bottom: 2.25rem;
      }
    }
  }

  .is-piecemeal > & {
    margin-top: 40vh;
    margin-bottom: 40vh;
    padding-top: 1.5rem;
    padding-bottom: 1.5rem;

    @media #{$mq-lg} {
      padding-top: 2.25rem;
      padding-bottom: 2.25rem;
    }

    &:nth-child(2) {
      margin-top: 100vh;

      .Header.is-floating + & {
        margin-top: calc(180vh - #{$abc-nav-height});

        @media #{$mq-pl-sm} {
          margin-top: calc(180vh - #{$abc-nav-height--mq-pl-sm});
        }
      }
    }

    &:last-child {
      margin-bottom: 50vh;
    }

    & > :last-child {
      margin-bottom: 0;
    }

    & > h4,
    & > p,
    & > ul li,
    & > ol li,
    & > blockquote {
      @media #{$mq-md} {
        font-size: 1.25rem;
      }

      @media #{$mq-lg} {
        font-size: 1.375rem;
      }
    }
  }

  .is-piecemeal.has-inset-media > &:nth-child(2) {
    margin-top: 30vh;
  }

  [class*='u-pull'] {
    float: none;
    margin-left: auto !important;
    margin-right: auto !important;
    width: cells(10);

    @media #{$mq-lg} {
      width: cells(8);
    }
  }

  @media #{$mq-lg} {
    .is-left > &,
    .is-right > &,
    &.is-left,
    &.is-right {
      width: 49.5rem;
    }

    .is-left > &,
    &.is-left {
      margin-left: calc(30% - 24.75rem);
    }

    .is-right > &,
    &.is-right {
      margin-right: calc(30% - 24.75rem);
    }

    .has-inset-media.is-left > &,
    .has-inset-media > &.is-left {
      margin-left: calc(27% - 24.75rem);
    }

    .has-inset-media.is-right > &,
    .has-inset-media > &.is-right {
      margin-right: calc(27% - 24.75rem);
    }
  }
}
