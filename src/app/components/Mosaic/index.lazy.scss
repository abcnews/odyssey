@import '../../constants';

.Mosaic {
  --Mosaic-gap: #{$unit * 0.25};
  overflow: hidden;
  padding-top: var(--Mosaic-gap);

  @media #{$mq-lt-lg} {
    padding-left: 0 !important;
    padding-right: 0 !important;
  }

  @media #{$mq-md} {
    --Mosaic-gap: #{$unit * 0.5};
  }

  @media #{$mq-gt-md} {
    --Mosaic-gap: #{$unit * 0.625};
  }
}

.Mosaic-items {
  margin: 0 calc(var(--Mosaic-gap) * -0.5);
  position: relative;
  display: flex;
  flex-wrap: wrap;
}

.Mosaic-item {
  flex: 0 1 100%;
  margin-bottom: var(--Mosaic-gap);
  padding: 0 calc(var(--Mosaic-gap) * 0.5);
  position: relative;

  .RichtextTile-content > * {
    padding: 0 !important;
  }

  @media #{$mq-sm} {
    &[data-row-length='2'] .RichtextTile-content > .Quote.is-pullquote p {
      font-size: 1.125rem;
    }

    &[data-row-length='3'] .RichtextTile-content > .Quote.is-pullquote p {
      font-size: 0.875rem;
    }
  }

  .Caption {
    opacity: 0;
    position: absolute;
    bottom: 0;
    padding-right: var(--Mosaic-gap);
    padding-left: var(--Mosaic-gap);
    max-width: calc(100% - var(--Mosaic-gap));
    min-height: 0;
    background-color: $color-black-transparent-60;
    color: $color-lightBg;
    pointer-events: none;
    transition: opacity 0.125s;

    @media #{$mq-sm} {
      display: none;
    }
  }

  &:hover .Caption,
  & :not(.Caption):focus + .Caption {
    opacity: 1;
    pointer-events: all;
  }

  .Caption-attribution {
    color: $color-grey-100;
  }
}
